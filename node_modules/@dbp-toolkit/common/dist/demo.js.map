{"version":3,"file":"demo.js","sources":["../dbp-common-demo.js"],"sourcesContent":["import {createInstance} from './src/i18n.js';\nimport {css, html, LitElement} from 'lit';\nimport {ScopedElementsMixin} from '@open-wc/scoped-elements';\nimport * as commonUtils from './utils.js';\nimport * as commonStyles from './styles.js';\nimport {\n    getIconCSS,\n    Icon,\n    MiniSpinner,\n    Button,\n    LoadingButton,\n    Spinner,\n    InlineNotification,\n    Translated,\n    Translation,\n} from './index.js';\n\n\n\nexport class DbpCommonDemo extends ScopedElementsMixin(LitElement) {\n    constructor() {\n        super();\n        this._i18n = createInstance();\n        this.lang = this._i18n.language;\n        this.noAuth = false;\n        this.langDir = '';\n    }\n\n    static get scopedElements() {\n        let elements = {\n            'dbp-icon': Icon,\n            'dbp-mini-spinner': MiniSpinner,\n            'dbp-spinner': Spinner,\n            'dbp-button': Button,\n            'dbp-loading-button': LoadingButton,\n            'dbp-inline-notification': InlineNotification,\n            'dbp-translated': Translated,\n            'dbp-translation': Translation\n        };\n\n        if (customElements.get('dbp-auth')) {\n            elements['dbp-auth'] = customElements.get('dbp-auth');\n        }\n\n        return elements;\n    }\n\n    static get properties() {\n        return {\n            lang: {type: String},\n            noAuth: {type: Boolean, attribute: 'no-auth'},\n            langDir: {type: String, attribute: 'lang-dir'},\n        };\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this._i18n.changeLanguage(this.lang);\n\n        this.updateComplete.then(() => {});\n    }\n\n    static get styles() {\n        // language=css\n        return css`\n            ${commonStyles.getThemeCSS()}\n\n            h1.title {\n                margin-bottom: 1em;\n            }\n            div.container {\n                margin-bottom: 1.5em;\n            }\n\n            a:hover {\n                color: #ffbb00 !important;\n                background-color: blue;\n            }\n\n            .demoblock {\n                position: relative;\n                width: 1.1em;\n                height: 1.1em;\n                display: inline-block;\n                padding: 0px 0px 0px 3px;\n            }\n\n            /* from BULMA.CSS */\n            .section {\n                padding: 3rem 1.5rem;\n            }\n            .content h1 {\n                font-size: 2em;\n                margin-bottom: 0.5em;\n            }\n            .content h1,\n            .content h2,\n            .content h3,\n            .content h4,\n            .content h5,\n            .content h6 {\n                color: var(--dbp-content);\n                font-weight: 600;\n                line-height: 1.125;\n            }\n            .control:not(:last-child) {\n                margin-bottom: 0.5rem;\n            }\n        `;\n    }\n\n    getAuthComponentHtml() {\n        return this.noAuth\n            ? html``\n            : html`\n                  <div class=\"container\">\n                      <dbp-auth lang=\"${this.lang}\"></dbp-auth>\n                  </div>\n              `;\n    }\n\n    buttonClickHandler(e) {\n        // add class to button to end2end test if button was clicked\n        e.target.classList.add('button-clicked');\n\n        setTimeout(() => {\n            const scopedTagName = this.getScopedTagName('dbp-button');\n            this.shadowRoot.querySelector(scopedTagName).stop();\n        }, 1000);\n    }\n\n    loadingButtonClickHandler(e) {\n        let button = e.target;\n        button.start();\n        setTimeout(() => {\n            button.stop();\n        }, 1000);\n    }\n\n    render() {\n        return html`\n            <style>\n                a:after {\n                    ${getIconCSS('envelope')};\n                }\n            </style>\n            <section class=\"section\">\n                <div class=\"content\">\n                    <h1>Common-Demo</h1>\n                </div>\n                ${this.getAuthComponentHtml()}\n                <div class=\"content\">\n                    <h2>Mini Spinner</h2>\n                    <div class=\"control\">\n                        <dbp-mini-spinner text=\"Loading...\"></dbp-mini-spinner>\n                        <dbp-mini-spinner></dbp-mini-spinner>\n                        <dbp-mini-spinner style=\"font-size: 2em\"></dbp-mini-spinner>\n                        <dbp-mini-spinner style=\"font-size: 3em\"></dbp-mini-spinner>\n                    </div>\n                </div>\n                <div class=\"content\">\n                    <h2>Spinner</h2>\n                    <div class=\"control\">\n                        <dbp-spinner></dbp-spinner>\n                    </div>\n                </div>\n                <div class=\"content\">\n                    <h2>Icons</h2>\n                    <div class=\"control\">\n                        <p style=\"text-decoration: underline\">\n                            Foo\n                            <dbp-icon name=\"cloudnetwork\"></dbp-icon>\n                            bar\n                        </p>\n                        <p style=\"font-size: 2em;\">\n                            Foo\n                            <dbp-icon name=\"cloudnetwork\"></dbp-icon>\n                            bar\n                        </p>\n                        <p style=\"font-size: 2em; color: orange\">\n                            Foo\n                            <dbp-icon name=\"cloudnetwork\"></dbp-icon>\n                            bar\n                        </p>\n                        <span style=\"background-color: #000\">\n                            <a href=\"#\" style=\" color: #fff\">foobar</a>\n                        </span>\n                        <p style=\"font-size: 2em; color: orange\">\n                            Foo\n                            <dbp-icon name=\"information\"></dbp-icon>\n                            bar\n                        </p>\n                        <br />\n\n                        ${new Array(100).fill(0).map(\n                            (i) =>\n                                html`\n                                    <dbp-icon\n                                        style=\"color: green; width: 50px; height: 50px; border: #000 solid 1px\"\n                                        name=\"happy\"></dbp-icon>\n                                `\n                        )}\n                    </div>\n                </div>\n                <div class=\"content\">\n                    <h2>Button</h2>\n                    <div class=\"control\">\n                        <dbp-button\n                            value=\"Load\"\n                            @click=\"${this.buttonClickHandler}\"\n                            type=\"is-primary\"></dbp-button>\n\n                        <dbp-loading-button\n                            @click=\"${this.loadingButtonClickHandler}\"\n                            type=\"is-primary\">\n                            Loading Button\n                        </dbp-loading-button>\n                        <dbp-loading-button\n                            @click=\"${this.loadingButtonClickHandler}\"\n                            type=\"is-primary\"\n                            disabled>\n                            Loading Button Disabled\n                        </dbp-loading-button>\n                    </div>\n                </div>\n                <div class=\"content\">\n                    <h2>Theming CSS API</h2>\n                    <div class=\"control\">\n                        <ul>\n                            <!-- TODO -->\n                            <!-- old\n                            <li><code>--dbp-primary-bg-color</code>: Primary background color <div class=\"demoblock\" style=\"background-color: var(--dbp-primary-bg-color)\"></div></li>\n                            <li><code>--dbp-primary-text-color</code>: Primary text color <div class=\"demoblock\" style=\"background-color: var(--dbp-primary-bg-color); color: var(--dbp-primary-text-color)\">X</div></li>\n                            <li><code>--dbp-secondary-bg-color</code>: Secondary background color <div class=\"demoblock\" style=\"background-color: var(--dbp-secondary-bg-color)\"></div></li>\n                            <li><code>--dbp-secondary-text-color</code>: Secondary text color <div class=\"demoblock\" style=\"background-color: var(--dbp-secondary-bg-color); color: var(--dbp-secondary-text-color)\">X</div></li>\n                            <li><code>--dbp-info-bg-color</code>: Info background color <div class=\"demoblock\" style=\"background-color: var(--dbp-info-bg-color)\"></div></li>\n                            <li><code>--dbp-info-text-color</code>: Info text color <div class=\"demoblock\" style=\"background-color: var(--dbp-info-bg-color); color: var(--dbp-info-text-color)\">X</div></li>\n                            <li><code>--dbp-success-bg-color</code>: Success background color <div class=\"demoblock\" style=\"background-color: var(--dbp-success-bg-color)\"></div></li>\n                            <li><code>--dbp-success-text-color</code>: Success text color <div class=\"demoblock\" style=\"background-color: var(--dbp-success-bg-color); color: var(--dbp-success-text-color)\">X</div></li>\n                            <li><code>--dbp-warning-bg-color</code>: Warning background color <div class=\"demoblock\" style=\"background-color: var(--dbp-warning-bg-color)\"></div></li>\n                            <li><code>--dbp-warning-text-color</code>: Warning text color <div class=\"demoblock\" style=\"background-color: var(--dbp-warning-bg-color); color: var(--dbp-warning-text-color)\">X</div></li>\n                            <li><code>--dbp-danger-bg-color</code>: Danger background color <div class=\"demoblock\" style=\"background-color: var(--dbp-danger-bg-color)\"></div></li>\n                            <li><code>--dbp-danger-text-color</code>: Danger text color <div class=\"demoblock\" style=\"background-color: var(--dbp-danger-bg-color); color: var(--dbp-danger-text-color)\">X</div></li>\n\n                            <li><code>--dbp-light</code>: Light color <div class=\"demoblock\" style=\"background-color: var(--dbp-light)\"></div></li>\n                            <li><code>--dbp-dark</code>: Dark color <div class=\"demoblock\" style=\"background-color: var(--dbp-dark)\"></div></li>\n                            <li><code>--dbp-muted-text</code>: Muted text color <div class=\"demoblock\" style=\"color: var(--dbp-muted-text)\">X</div></li>\n                            <li><code>--dbp-border-radius</code>: Border-radius <div class=\"demoblock\" style=\"background-color: var(--dbp-light); border-color: var(--dbp-dark); border-style: solid; border-width: 1px; border-radius: var(--dbp-border-radius)\"></div></li>\n                            <li><code>--dbp-border-width</code>: Border-width <div class=\"demoblock\" style=\"background-color: var(--dbp-light); border-color: var(--dbp-dark); border-style: solid; border-width: var(--dbp-border-width); border-radius: 0px;\"></div></li>\n                            -->\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"content\">\n                    <h2>Theming CSS Override API</h2>\n                    <pre>\n&lt;style&gt;\nhtml {\n    /* This will override --dbp-primary-surface */\n    --dbp-override-primary-surface: green;\n    /* Same for all other variables, prefix with \"override\" */\n}\n&lt;/style&gt;</pre\n                    >\n                </div>\n                <div class=\"content\">\n                    <h2>Inline Notification</h2>\n                    <div class=\"control\">\n                        <dbp-inline-notification\n                            body=\"Item <b>foo</b> was deleted!\"\n                            type=\"primary\"></dbp-inline-notification>\n                        <br />\n                        <dbp-inline-notification\n                            summary=\"Item foo was deleted.\"></dbp-inline-notification>\n                        <br />\n                        <dbp-inline-notification\n                            summary=\"Item deleted\"\n                            body=\"Item <b>foo</b> was deleted!\"\n                            type=\"success\"></dbp-inline-notification>\n                        <br />\n                        <dbp-inline-notification\n                            summary=\"Item deleted\"\n                            body=\"Item <b>foo</b> was deleted!\"\n                            type=\"danger\"></dbp-inline-notification>\n                        <br />\n                        <dbp-inline-notification\n                            summary=\"Item deleted\"\n                            body=\"Item <b>foo</b> was deleted!\"\n                            type=\"warning\"></dbp-inline-notification>\n                    </div>\n                </div>\n                <div class=\"content\">\n                    <h2>Translated text</h2>\n                    <div class=\"control\" id=\"dbp-translated-demo\">\n                        <dbp-translated subscribe=\"lang\">\n                            <div slot=\"de\">\n                                Dieser Text ist Deutsch und wird Englisch werden wenn man die\n                                Sprache auf Englisch stellt.\n                            </div>\n                            <div slot=\"en\">\n                                This text is English and will be German if the language is changed\n                                to German.\n                            </div>\n                        </dbp-translated>\n                    </div>\n                    <div class=\"control\" id=\"dbp-translation-demo\">\n                        <dbp-translation key=\"toolkit-showcase\" subscribe=\"lang, lang-dir\"></dbp-translation>\n                        <dbp-translation key=\"toolkit-showcase-link\" var='{\"link1\": \"https://www.i18next.com/translation-function/interpolation\"}' subscribe=\"lang, lang-dir\" unsafe></dbp-translation>\n                        <dbp-translation key=\"abc\" subscribe=\"lang, lang-dir\"></dbp-translation>\n                    </div>\n                </div>\n            </section>\n        `;\n    }\n}\n\ncommonUtils.defineCustomElement('dbp-common-demo', DbpCommonDemo);\n"],"names":["LitElement","css","commonStyles.getThemeCSS","html","commonUtils.defineCustomElement"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG;AACpD,4BAA4B,CAAC,CAAC;AAC9B,gCAAgCA,CAAI,CAAC;AACrC;AACA;AACA;AACA,gCAAgC,CAAC;AACjC,yBAAyB,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,EAAE,IAAI,CAAC,kBAAkB,CAAC;AAC9D;AACA;AACA;AACA,oCAAoC,EAAE,IAAI,CAAC,yBAAyB,CAAC;AACrE;AACA;AACA;AACA;AACA,oCAAoC,EAAE,IAAI,CAAC,yBAAyB,CAAC;AACrmBAA+B,CAAC,iBAAiB,EAAE,aAAa,CAAC"}